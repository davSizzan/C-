@model BTLWeb.Models.tblSanPham
@{
    ViewBag.Title = "DangSanPham";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}
<h3 class="text-center">Thêm mới</h3>
@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <nav aria-label="breadcrumb">
            <ol class="breadcrumb">
                <li class="breadcrumb-item">Trang chủ</li>
                <li class="breadcrumb-item active" aria-current="page">Sản phẩm</li>
                <li class="breadcrumb-item active" aria-current="page">Thêm sản phẩm</li>
            </ol>
        </nav>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            <div class="col-md-10">
                @Html.EditorFor(model => model.SanPhamID, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SanPhamID, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TenSanPham, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TenSanPham, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TenSanPham, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.XuatXu, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.XuatXu, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.XuatXu, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MoTa, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MoTa, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MoTa, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.GiaBan, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.GiaBan, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.GiaBan, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConHang, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.ConHang)
                    @Html.ValidationMessageFor(model => model.ConHang, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HienThi, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.HienThi)
                    @Html.ValidationMessageFor(model => model.HienThi, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        @{
            <div class="form-group text-center">
                <button class="col-md-offset-2 col-md-3">
                    Create
                </button>
            </div>
        }
    </div>
}

<div class="text-center">
    @Html.ActionLink("Back to List", "Index")
</div>
